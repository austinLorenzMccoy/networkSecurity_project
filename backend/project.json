{
  "title": "Network Threat Detection & MLOps Pipeline",
  "category": "MLOPS",
  "description": "End-to-end network security ML system with CI/CD (Jenkins), containerized FastAPI inference API, DVC data/versioning, and MLflow tracking.",
  "complexityGears": 4,
  "pressureRating": 85,
  "brassFramedPreview": "/assets/projects/network_security_pipeline.gif",
  "cogwheelSchema": [
    "/assets/schemas/network_security_arch.svg"
  ],
  "tags": [
    "network security",
    "intrusion detection",
    "anomaly detection",
    "FastAPI",
    "DVC",
    "MLflow",
    "Jenkins",
    "Docker",
    "CI/CD"
  ],
  "problemStatement": "Detect malicious network activities from flow-level data and expose a production-grade API for scoring with full MLOps plumbing.",
  "technicalApproach": "Pipeline with components in backend/ for ingestion, transformation, training, and evaluation. Artifacts and data are versioned with DVC; experiments tracked in MLflow. Serving via FastAPI (app.py) packaged in Docker and orchestrated by Jenkins CI/CD. Includes tests under tests/ and dataset schema in data_schema/.",
  "resultsMetrics": [
    { "name": "F1", "value": 91, "unit": "%", "gaugeType": "ACCURACY" },
    { "name": "Precision", "value": 93, "unit": "%", "gaugeType": "ACCURACY" },
    { "name": "Recall", "value": 90, "unit": "%", "gaugeType": "ACCURACY" }
  ],
  "lessonsLearned": "Reliable CI needs a Python base image in Jenkins/Docker. Data/experiment reproducibility is simplified by DVC+MLflow. Clear schema validation reduces downstream training issues.",
  "liveDemoConfig": {
    "type": "API",
    "parameters": {
      "endpoint": "/predict",
      "examplePayloadPath": "/assets/samples/network_flow.json"
    }
  }
}
